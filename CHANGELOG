### v0.4.0 ###
	*** CHANGES
		API and Backend
			- Completed initial implementation of RequireJS. Classes split into individual files.
			- Class Flasher renamed to Blinker.
			- OpSys::flash() renamed to OpSys::blink().
			- Modified all occurrences throughout script to conform with the above changes.
			- Added OpSys::flash() to bip the lights of all buttons simultaneously.

		Torpedo
			- Button now bips with its own tone, along with a flash of all buttons, when the correct row/column is pressed. This is consistent with the text of the documentation.

	*** BUGFIX
		API and Backend
			- Corrected "ui/Manpage" to "ui/manpage".

### v0.3.0 ###
	*** CHANGES
		UI and Frontend
			- Modify method of playfield generation. Now uses insertRow() and insertCell() rather than static text and insertHTML.
			- Dynamically generate playfield without using static text.
			- Modifications to process touch interactions for mobile devices.

		API and Backend
			- Added workaround, courtesy of GitHub user 'laziel', to unlock and enable web audio on iOS.
			- Added flag to indicate when a sound is (should) be playing.
			- Moved Lights::hues to constant HUES

		Debug
			- Display contents of Tandy-12 OpSys, OpSys::sysMem, and Sequencer.
			- Add function to display error messages.
			- Add button to enable/disable debugging display.

		Baseball
			- Add basic line score and RHE to display.
			- Silenced pitch tones.

	*** OPTIMIZATIONS
		API and Backend
			- Reduced namespace pollution.
			- Streamline the flasher to reduce resource usage.

		Boot
			- Minor code cleanup.

		Picker
			- Minor modification to streamline game selection.

		Baseball
			- Improve layout of baseball diamond.

### v0.2.5 ###
	*** BUGFIX
		API and Backend
			- Disable audio for iOS as workaround for issue regarding the manipulation of audio oscillators without user input.

### v0.2.4 ###
	*** BUGFIX
		API and Backend
			- Resolved issue which would result in the creation of additional clocks when pressing the 'Play' button in the clock control panel.

### v0.2.3 ###
	*** BUGFIX
		API and Backend
			- Resolved issue where minimum Ms wasn't being enforced in clock overrides.

### v0.2.2 ###
	*** BUGFIX
		API and Backend
			- Resolved issue which resulted in lights staying on when Tandy-12 is turned off.

### v0.2.1 ###
	*** BUGFIX
		API and Backend
			- Resolved error which caused the clock to override the minimum value if it was greater than the minimum allowable.

### v0.2.0 ###
	*** OPTIMIZATIONS
			- Minor code cleanup/clarification.

		API and Backend
			- Reset Clock timestamp when Tandy-12 is power cycled.
			- Range checking for min/max clock rate to prevent divide-by-zero errors or excessively high maximums.
			- Clean up Light initialization.
			- Update shadeBlend to most recent version listed on ATTRIBUTION site.

	*** BUGFIXES
		Torpedo
			- Corrected issue which would result in exiting game when trying to start a new one.

### v0.2.0-rc.1 ###
	*** CHANGES
		UI and Frontend
			- Cosmetic changes to better emulate the appearance of the Tandy-12.

		API and Backend
			- Add debugging features.
			- Move shadeBlend from Lights class to Tandy12 Class to more easily allow its use within other classes.
			- Optimize sequencer.  Items in excess of Sequencer::MAXLEN will be truncated from the beginning of the sequence.  Interface added to OpSys for new features.
			- Sequencer label is now set when sequence is started, rather than when a pre-generated sequence is loaded.

		Debug
			- Select bootup program via dropdown menu.
			- Range input to adjust clock rate.

		Boot
			- Re-write bootup program to utilize Sequencer.

		Song Writer
			- Minor code change to take advantage of updates to Sequencer.

		Tag-It
			- Now checks for endGame condition before displaying light, rather than during wait cycle, allowing last light of game to be played.

	*** OPTIMIZATIONS
		API and Backend
			- Reset Clock timestamp when Tandy-12 is power cycled.
			- Clean up Light initialization.

	*** BUGFIXES
		API and Backend
			- Minor bugfix to Sequencer; resolved issue where clock was being initialized multiple times each time Sequencer played a sequence.

		Song-Writer
			- Resolved issue which resulted in being unable to create a new song after clearing one during playback.

		Picker
			- Resolved issue which would cause the picker to load a different game than intended if a game button is pressed after pressing START, but before game is loaded into memory.

### v0.1.0 ###
	Initial Release, with basic UI, hardware and OS emulation, all 12 games, and dynamic documentation.
